---
- name: Redmine. Install packages
  apt:
    name: "{{ apt_redmine_packages }}"
    state: latest
    update_cache: yes
    
- name: Redmine. Clone repository
  git:
    repo: "{{ app_repo }}"
    dest: "{{ app_home }}"
    version: '{{ app_version }}'
    accept_hostkey: yes
    update: no

- name: Redmine. Change permissions
  file:
    path: "{{ app_home }}/public"
    owner: www-data
    group: www-data
    recurse: yes
- name: Redmine. Change permissions
  file:
    path: "{{ app_home }}/tmp"
    mode: '777'
    recurse: yes

- name: Redmine. Setup 01
  shell: |
    gem install bundler
    bundle update
  args:
    executable: /bin/bash
    chdir: "{{ app_home }}"
  tags:
    - setup
  changed_when: false

- name: Session store secret generation
  command: rake generate_secret_token
  args:
    chdir: "{{ app_home }}"
    creates: "{{ app_home }}/config/initializers/secret_token.rb"
  tags:
    - setup


- name: Configuring user priviliges
  mysql_user:
    name: User name "{{ app_db_user }}"
    password: "{{ app_db_pass }}"
    priv: "{{ app_db_name }}.*:ALL"


- name: Redmine. Setup 02
  shell: |
    bundle exec rake db:migrate RAILS_ENV=production
    bundle exec rake redmine:plugins:migrate RAILS_ENV=production
    bundle install --without development test
    RAILS_ENV=production rake db:migrate
    #RAILS_ENV=production REDMINE_LANG="{{ app_lang }}" rake redmine:load_default_data
    #bundle exec rails server webrick -e production
  args:
    chdir: "{{ app_home }}"
  tags:
    - setup
  changed_when: false

- name: Configuration files for virtualhost
  template:
    src: redmine.site.conf.j2
    dest: "/etc/apache2/sites-enabled/redmine.site.conf"
  notify:
    - apache restart

- name: "Add {{ app_fqdn }} to host file"
  shell: echo "127.0.0.1       {{ app_fqdn }}" >> /etc/hosts
  tags:
    - test
  changed_when: false

- name: "Check content"
  uri:
    url: "http://{{ app_fqdn }}"
    return_content: yes
  register: this
  failed_when: "'Jean-Philippe Lang' not in this.content"
  tags:
    - test

- name: Replace host settings
  lineinfile:
    path: /etc/hosts
    state: absent
    regexp: '^127.0.0.1       {{ app_fqdn }}'
  tags:
    - test
    - always



- name: Curl and check output
  block:
    - name: Curl content
      uri:
        url: "http://{{ app_fqdn }}"
        return_content: yes
      register: content
      failed_when: "'Jean-Philippe Lang' not in this.content"
    - name: Print content
      debug:
        msg: "{{ content }}"
  rescue:
    - name: rollback_app
      include_role:
        name: rollback_app
 
- name: Send notification message via Slack
  slack:
    token: "TFBPBNB2L/B01VDHYTS82/vVS6nZUI5NlJrEAjPcN6OoX2"
    msg: '{{ inventory_hostname }} completed'
    username: 'Ansible sender'
    channel: '#pr_baa'
    color: good
    parse: 'full'
